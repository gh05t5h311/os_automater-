#!/usr/bin/python3
import os,rsa
cmds = ["mkf: Makes a new file(be careful can overwrite with no warning if the filename exists!)",
"apf: Append to a file.",
"rfl: Read the contents of a file.",
"sysinfo: Displays useful information about the local system.",
"mdir: Makes a new directory.",
"help: Displays this help dialog listing all the commands.",
"sfile: Takes a filename and searches is for specific text. Note you may need to provide a path E.G:(if the file you are searching is not in the same directory as this program); /some/path",
"wdh: Performs a whois, dig and host lookup",
"ohd: Displays information for octal, hex, decimal.",
"pchk: Checks services running on a specific port(will prompt for root password(if needed)).",
"encrypt: Encrypts your precious data with a 'powerful' 2048 RSA cypher(use responsibly(not my fault if you encrypt your data like an idiot and hide it from your own private key)take no responsibility)).",
"decrypt: Decrypts rsa encoded data(note the public/private key MUST match, up to you to get that right)",
"osi: Prints out the open system's interconnect model(OSI model)",
"exit: Exits."
]
publicKey,privateKey = rsa.newkeys(2048)
console = True
def getInfo(arg,ios):
	if ios == "str": #Is this an integer or a string?
		return input("%s"%(arg)) #Take note of a string and return it
	else:
		return int(input("%s" )%(arg)) #Take note of an integer and return it from the function
def cmd(arg):
	os.system("%s"%(arg))
	#^^ takes an argument when the function is called and then pass that to system(not network connected so don't panic)
def mkfile():
	def fName():
		NameOk=False
		new_filename = ""
		while NameOk == False:
			new_filename = getInfo("filename please.\n$: ","str")
			if os.system("ls | grep -i '%s'"%(new_filename)) == 0:
				print("Ah a file with that name exists in this directory:\nPlease try again!")
			else:
				NameOk = True
		return new_filename
	new_file_name = fName()
	file = open(new_file_name,"w")
	print("Created a file named %s."%(new_file_name))
	file.close()
	#^^ this function makes
def appendFile():
	apfname = getInfo("filename please.\n$: ","str")
	tofile = getInfo("To add to the file...$: ","str")
	fileOpen = open(apfname,"a")
	fileOpen.write("\n"+tofile)
	print("Written to file...")
	fileOpen.close()
def rfile():
	fileName = getInfo("filename please.\n$: ","str")
	try:
		file = open(fileName,"r")
	except FileNotFoundError:
		print("The file you where looking for was not found...")
	file.seek(0,0)
	print(file.read())
	file.close()
def select():
	for each in cmds:
		print(each)
	return getInfo("What command please..\n$> ","str")
def sfile(filename,search):
	os.system("cat %s | grep -i %s"%(filename,search))
def wdh():
	domain = getInfo("Domain name please(just the name and the tld(e.g google.com).\n$:","str")
	std = getInfo("Would you like to save it to disk?","str")
	fileName = getInfo("Please pick a filename: \n$: ")
	if std.lower() == "yes" or std.lower() == "y":
		std = True
	else:
		std = False
	if std == False:
		print("Just getting the information...")
		cmd("whois %s"%(domain))
		cmd("dig  %s"%(domain))
		cmd("host %s"%(domain))
	else:
		cmd("whois > %s"%(fileName))
		cmd("dig >> %s"%(fileName))
		cmd("host >> %s"%(fileName))
def mdir():
		dname = getInfo("Directory name please: ","str")
		cmd("mkdir %s"%(dname))
		print("OK, have made a directory called: '%s'\nPATH: %s"%(dname,os.getcwd()))
def phck():
	cmd("netstat â€“pnltu | grep %s"%(getInfo("Port Please: ","int")))
def encrypt(data):
	enc_msg = rsa.encrypt(data.encode(),publicKey)
	print("Encoded message looks like:\n %s"%(enc_msg))
	return enc_msg
def decrypt(data):
        dec_msg = rsa.decrypt(data,privateKey).decode()
        return dec_msg
 def osi():
 	print(""" 
 	6)Application: Network process to application. DNS WWW/HTTP/HTTPS/P2P,E-Mail,POP,SMTP,Telnet,FTP.
 	5)Presentation: Data representation and encryption. HTML,DOC,JPEG,MP3,AVI.
 	4)Session: Inter host communication. TCP,SIP,RTP.
 	3)Transport: End-To-End connections and reliability.TCP,UDP,SCTP,SSL,TLS.
 	2)Path Determination and logical addressing: IP,IPSec,ICMP,IGMP,OSPF.
 	1)Data Link: Ethernet, 802.11,MAC/LLC,VLAN,ATM,HDP,PPP,Q,921,Token Ring,ARP.
 	0)Physical: Media signal and binary transmission. RS-232,RJ45,V,100BASE-TX,SDH,DSL,802.11
 	""")
_select_ = ""
enc_msg =  ""
print("Hello %s\nThe current working directory is:\n%s"%(cmd("host"),os.getcwd()))
while _select_ != "exit":
	try:
		_select_ = getInfo("|> ","str")
		if _select_ == "mkf":
			mkfile()
		elif _select_ == "apf":
			appendFile()
		elif _select_ == "rfl":
			rfile()
		elif _select_ == "sysinfo":
			cmd("hostnamectl")
		elif _select_ == "search":
			search(getInfo("Filename(or full path)","str"),getInfo("search terms please:\n$: ","str"))
		elif _select_ == "wdh":
				wdh()
		elif _select_ == "ohd":
			os.system("man ascii")
		elif _select_ == "help":
			for each in cmds:
				print("%s\n"%(each))
		elif _select_ == "pchk":
			pchk()
		elif _select_ == "encrypt":
			enc_msg = encrypt(getInfo("information to encode: ","str"))
		elif _select_ == "decrypt":
			print("%s"%(decrypt(enc_msg)))
	except KeyboardInterrupt:
		exit()
